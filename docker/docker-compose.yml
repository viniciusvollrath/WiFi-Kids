services:
  traefik:
    image: traefik:v3.1
    command:
      - "--providers.docker=true"
      - "--providers.file.filename=/etc/traefik/dynamic.yml"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./traefik/acme.json:/acme/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_TOKEN=${CF_API_TOKEN}
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    volumes:
      - redis_data:/data
    restart: unless-stopped

  api:
    build: ./api
    environment:
      - API_ENV=${API_ENV}
      - API_SECRET_KEY=${API_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://default:${REDIS_PASSWORD}@redis:6379/0
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    labels:
      - "traefik.enable=true"

      # HTTP -> HTTPS
      - "traefik.http.routers.api-http.rule=Host(`api.${BASE_DOMAIN}`)"
      - "traefik.http.routers.api-http.entrypoints=web"
      - "traefik.http.routers.api-http.middlewares=redirect-to-https@file"

      # HTTPS
      - "traefik.http.routers.api-https.rule=Host(`api.${BASE_DOMAIN}`)"
      - "traefik.http.routers.api-https.entrypoints=websecure"
      - "traefik.http.routers.api-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api-https.middlewares=security-headers@file"

      # Porta interna do FastAPI
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    depends_on:
      - traefik
      - redis
    restart: unless-stopped

  app:
    build:
      context: ../ui/webapp/apps/pwa
      args:
        - VITE_API_URL=https://api.${BASE_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-http.priority=1"
      # HTTP -> HTTPS
      - "traefik.http.routers.app-http.rule=Host(`app.${BASE_DOMAIN}`)"
      - "traefik.http.routers.app-http.entrypoints=web"
      - "traefik.http.routers.app-http.middlewares=redirect-to-https@file"

      # HTTPS
      - "traefik.http.routers.app-https.rule=Host(`app.${BASE_DOMAIN}`)"
      - "traefik.http.routers.app-https.entrypoints=websecure"
      - "traefik.http.routers.app-https.tls.certresolver=letsencrypt"
      - "traefik.http.routers.app-https.middlewares=security-headers@file"

      # Porta interna do Caddy do app
      - "traefik.http.services.app.loadbalancer.server.port=80"
    depends_on:
      - traefik
    restart: unless-stopped

volumes:
  redis_data:
